services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure


  timescaledb:
    image: timescale/timescaledb:latest-pg17
    container_name: timescaledb
    ports:
      - "5432:5432" 
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres 
      POSTGRES_DB: market_signals
    volumes:
      - timescaledb_data:/var/lib/postgresql/data  
      - ./timescaledb-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d market_signals"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure 

  data-collector:
    build:
      context: .      
      dockerfile: ./data-collector/data-collector.dockerfile        
    container_name: data-collector
    ports:
      - "3000:3000" 
    env_file:
      - ./data-collector/.env
    depends_on:
      rabbitmq:
       condition: service_healthy
      timescaledb:
        condition: service_healthy
    restart: on-failure

  signal-persister: 
    build:
      context: .
      dockerfile: ./signal-persister/signal-persister.dockerfile
    container_name: signal-persister
    env_file:
      - ./signal-persister/.env 
    depends_on:
      rabbitmq:
        condition: service_healthy
      timescaledb:
        condition: service_healthy
    restart: on-failure

  signal-query-api:
    build:
      context: .
      dockerfile: ./signal-query-api/signal-query-api.dockerfile
    container_name: signal-query-api
    ports:
      - "8080:3003"
    env_file:
      - ./signal-query-api/.env
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -s -o /dev/null http://localhost:8080/api/v1/signals || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

    depends_on:
      timescaledb:
        condition: service_healthy
    restart: on-failure 

  micro-frontend:
    build:
      context: .
      dockerfile: ./micro-frontend/micro-frontend.dockerfile
    container_name: micro-frontend
    ports:
      - "3001:80"
    depends_on:
      signal-query-api:
        condition: service_started
    restart: on-failure

volumes: 
  timescaledb_data:
  